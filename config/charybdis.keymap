#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

#define HOST_OS 2
#define QUICK_TAP_MS 175
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"
#include "zmk-helpers/unicode-chars/russian.dtsi"

#define BASE 0
#define RUS  1
#define GAME 2
#define NAV  3
#define DIG  4
#define SYS  5
#define MOUSE  6
#define SCROLL 7
#define SNIPE 8

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4 LB5  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4 RB5  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 // thumb cluster for both hands


#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"


#define XXX &none
#define ___ &trans


#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs
MAKE_HRM(hml_layer, &mo, &kp, KEYS_R THUMBS) // switch layer like HRM
MAKE_HRM(hmr_layer, &mo, &kp, KEYS_L THUMBS) // switch layer like HRM

// left russian home row
//MAKE_HRM(hml_ctrl, &kp, &ru_f, KEYS_R THUMBS)
MAKE_HRM(hml_ctrl, &lm, &ru_f, KEYS_R THUMBS)
MAKE_HRM(hml_opt, &kp, &ru_bi, KEYS_R THUMBS)
MAKE_HRM(hml_shift, &kp, &ru_v, KEYS_R THUMBS)
MAKE_HRM(hml_layer_ru, &mo, &ru_a, KEYS_R THUMBS)


// right russian home row
MAKE_HRM(hmr_ctrl, &kp, &ru_zh, KEYS_L THUMBS)
MAKE_HRM(hmr_opt, &kp, &ru_d, KEYS_L THUMBS)
MAKE_HRM(hmr_shift, &kp, &ru_l, KEYS_L THUMBS)
MAKE_HRM(hmr_cmd, &lm, &ru_o, KEYS_L THUMBS)
MAKE_HRM(hmr_layer_dig_or_g, &mo, &ru_g, KEYS_L THUMBS)



&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.9s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

&mt {  // mod-tap config}
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/ {
    /omit-if-no-ref/ zip_temp_layer: zip_temp_layer {
        compatible = "zmk,input-processor-temp-layer";
        #input-processor-cells = <2>;
        require-prior-idle-ms = <1000>;
    };

    /omit-if-no-ref/ vertical_scroll_mapper: vertical_scroll_mapper {
        compatible = "zmk,input-processor-code-mapper";
        #input-processor-cells = <0>;
        type = <INPUT_EV_REL>;
        map
            = <INPUT_REL_Y INPUT_REL_WHEEL>
            ;
    };
};


/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&vtrackball>;
        // scaler: first is multiplier, second one is divider.
        // temp layer: first argument is layer, second is time in ms
        input-processors = <&zip_xy_scaler 1 6>, <&zip_temp_layer MOUSE 1000>;

        snipe {
            layers = <SNIPE>;
            input-processors = <&zip_xy_scaler 1 18>;
        };

        scroll {
            layers = <SCROLL>;
            // scaler: first is multiplier, second one is divider.
            input-processors = <&zip_y_scaler 1 9999>, <&zip_xy_to_scroll_mapper>, <&zip_scroll_scaler 1 72>;
        };
    };


/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */

    keymap {
        compatible = "zmk,keymap";

        BASE {
            label = "Norman";
            bindings = <
// ╭────────────────┬──────────────┬─────────────────────────┬─────────────────────────────┬──────────────────┬──────────────╮  ╭──────────────┬─────────────────┬──────────────────────────────────┬──────────────────────────────┬────────────────────────┬─────────╮
    &lt SYS ESC       &kp Q          &kp W                     &kp D                         &kp F              &kp K             &kp J          &kp U             &lt DIG R                          &kp L                          &mt COLON SEMICOLON      &backspace_or_delete
// ├────────────────┼──────────────┼─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┼──────────────────────────────┼────────────────────────┼─────────┤
    &kp TAB           &hml LCTRL A   &hml LALT S               &hml LSHFT E                  &hml_layer NAV T   &kp G             &kp Y          &hmr RIGHT_GUI N  &hmr RSHFT I                       &hmr RIGHT_ALT O               &hmr RIGHT_CONTROL H     &all_quotes
// ├────────────────┼──────────────┼─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┼──────────────────────────────┼────────────────────────┼─────────┤
    &kp LSHFT         &mt LG(Z) Z    &mt LG(X) X               &mt LG(C) C                   &mt LG(V) V        &mt LG(B) B       &kp P          &kp M             &hmr_layer SNIPE COMMA             &hmr_layer SCROLL DOT          &comment_or 0 SLASH      &to GAME
// ╰────────────────┴──────────────┴─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┴──────────────────────────────┴────────────────────────┴─────────╯
                                                               &sk LEFT_COMMAND              &space_or_super SPACE SPACE &mo DIG  &lt SYS ESC    &kp RET
//                                                           ╰─────────────────────────────┴──────────────────┴──────────────╯  ╰──────────────┴─────────────────╯
            >;
        };

/*
           й  ц  у  к  е     н  г   шщ  з  хэ
           ф! ы! в! а! п     р  о!  л!  д! ж!
           я  ч  с  м  и     т  ьъ  б,  ю. /*
*/

        rus {
            label = "Russian";
            bindings = <
// ╭────────────────┬───────────────────┬─────────────────┬───────────────────┬──────────────────────┬─────────────╮     ╭─────────────┬──────────────────────────┬───────────────────────┬───────────────────────┬───────────────────────────────────┬─────────╮
     ___              &ru_y               &ru_ts            &ru_u               &ru_k                  &ru_ye              &ru_n         &hmr_layer_dig_or_g DIG 0  &ru_sh_or_shch 0 0      &ru_z                   &ru_kh_or_e 0 0                     ___
// ├────────────────┼───────────────────┼─────────────────┼───────────────────┼──────────────────────┼─────────────┤     ├─────────────┼──────────────────────────┼───────────────────────┼───────────────────────┼───────────────────────────────────┼─────────┤
     ___              &hml_ctrl 0 LCTRL   &hml_opt LALT 0   &hml_shift LSHFT 0  &hml_layer_ru NAV 0    &ru_p               &ru_r         &hmr_cmd 0 RIGHT_COMMAND   &hmr_shift RSHFT K      &hmr_opt RIGHT_ALT L    &hmr_ctrl RIGHT_CONTROL SEMICOLON   ___
// ├────────────────┼───────────────────┼─────────────────┼───────────────────┼──────────────────────┼─────────────┤     ├─────────────┼──────────────────────────┼───────────────────────┼───────────────────────┼───────────────────────────────────┼─────────┤
     ___              &ru_ya              &ru_ch            &ru_s               &ru_m                  &ru_i               &ru_t         &ru_tone                   &ru_b_or COMMA 0        &ru_yu_or DOT 0         ___                                 ___
// ╰────────────────┴───────────────────┴─────────────────┼───────────────────┼──────────────────────┼─────────────┤     ├─────────────┼──────────────────────────┼───────────────────────┼───────────────────────┴───────────────────────────────────┴─────────╯
                                                            &base_mod LGUI RUS   ___                    ___                 ___           ___
//                                                        ╰───────────────────┴──────────────────────┴─────────────╯     ╰─────────────┴──────────────────────────╯
            >;
        };

        GAME {
            label = "Game";
            bindings = <
// ╭────────────────┬──────────────┬─────────────────────────┬─────────────────────────────┬──────────────────┬──────────────╮  ╭──────────────┬─────────────────┬──────────────────────────────────┬──────────────────────────────┬────────────────────────┬─────────╮
    &lt BASE ESC       &kp Q          &kp W                     &kp E                         &kp R              &kp T             &kp Y          &kp U             &kp I                              &kp O                          &kp L                   ___
// ├────────────────┼──────────────┼─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┼──────────────────────────────┼────────────────────────┼─────────┤
    ___                &kp A          &kp S                     &kp D                         &kp F              &kp G             &kp H          &kp J             &kp K                              &kp L                         &kp SEMICOLON            ___
// ├────────────────┼──────────────┼─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┼──────────────────────────────┼────────────────────────┼─────────┤
    ___                &kp Z          &kp X                     &kp C                         &kp V              &kp B             &kp N          &kp M             &kp COMMA                          &kp DOT                        &kp SLASH               ___
// ╰────────────────┴──────────────┴─────────────────────────┼─────────────────────────────┼──────────────────┼──────────────┤  ├──────────────┼─────────────────┼──────────────────────────────────┴──────────────────────────────┴────────────────────────┴─────────╯
                                                               &sk LEFT_COMMAND              &kp SPACE          &mo DIG           &lt SYS ESC    &kp RET
//                                                           ╰─────────────────────────────┴──────────────────┴──────────────╯  ╰──────────────┴─────────────────╯
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
// ╭────────────────┬──────────────┬───────────────────────┬──────────────────────┬───────────────────┬─────────────╮        ╭─────────────┬──────────────────┬──────────────┬──────────────────┬──────────────────────┬─────────╮
     ___              ___            &kp LS(LG(NUMBER_3))    &kp LS(LG(NUMBER_4))   ___                 ___                    &none         &kp HOME           &kp UP         &kp END            &kt PAGE_UP            ___
// ├────────────────┼──────────────┼───────────────────────┼──────────────────────┼───────────────────┼─────────────┤        ├─────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     ___              ___            ___                     ___                    ___                 ___                    &kp LA(LEFT)  &kp LEFT           &kp DOWN       &kp RIGHT          &kp LA(RIGHT)          ___
// ├────────────────┼──────────────┼───────────────────────┼──────────────────────┼───────────────────┼─────────────┤        ├─────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     ___              ___            ___                     ___                    ___                 ___                    &none         &kp LA(LEFT)       &none          &kp LA(RIGHT)      &kt PAGE_DOWN          ___
// ╰────────────────┴──────────────┴───────────────────────┼──────────────────────┼───────────────────┼─────────────┤        ├─────────────┼──────────────────┼──────────────┼──────────────────┴──────────────────────┴─────────╯
                                                             ___                    ___                 ___                    ___           ___
//                                                         ╰──────────────────────┴───────────────────┴─────────────╯        ╰─────────────┴──────────────────╯
            >;
        };


        digits {
            label = "Digits";
            bindings = <
// ╭────────────────┬────────────────────────┬──────────────────────┬────────────────────────────┬──────────────────────────────┬────────────────────────────────────╮        ╭────────────────┬──────────────────┬──────────────┬──────────────────┬──────────────────────┬─────────╮
     ___              &kp PIPE                 &kp DOLLAR             &kp LEFT_BRACE               &kp RIGHT_BRACE                &more_or_equal                                 &kp PLUS         &mt LS(N7) N7    &mt LS(N8) N8  &mt LS(N9) N9        &kp SEMICOLON         ___
// ├────────────────┼────────────────────────┼──────────────────────┼────────────────────────────┼──────────────────────────────┼────────────────────────────────────┤        ├────────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     ___              &hml LCTRL EXCLAMATION  &hml LEFT_ALT AT_SIGN   &hml LSHFT LEFT_PARENTHESIS  &lt NAV RIGHT_PARENTHESIS      &fun_arrow_right                               &kp EQUAL        &mt LS(N4) N4    &mt LS(N5) N5  &mt LS(N6) N6        &kp KP_MULTIPLY       ___
// ├────────────────┼────────────────────────┼──────────────────────┼────────────────────────────┼──────────────────────────────┼────────────────────────────────────┤        ├────────────────┼──────────────────┼──────────────┼──────────────────┼──────────────────────┼─────────┤
     ___              &kp AMPERSAND           &kp LCTRL              &mt LESS_THAN LEFT_BRACKET   &mt GREATER_THAN RIGHT_BRACKET  &less_or_equal                                 &mt UNDER MINUS  &mt LS(N1) N1    &mt COMMA N2  &mt PERIOD N3        &kp PERIOD           &kp SLASH
// ╰────────────────┴────────────────────────┴──────────────────────┼────────────────────────────┼──────────────────────────────┼────────────────────────────────────┤        ├────────────────┼──────────────────┼──────────────┼──────────────────┴──────────────────────┴─────────╯
                                                                      ___                            ___                          ___                                            ___              &mt LS(N0) N0
//                                                                  ╰────────────────────────────┴──────────────────────────────┴────────────────────────────────────╯        ╰────────────────┴──────────────────╯
            >;
        };

         sim_layer {
             label = "SYSTEM";
             bindings = <
// ╭────────────────┬─────────┬─────────┬──────────────┬────────────┬─────────────╮        ╭─────────────┬──────────────┬────────────┬────────────┬──────────┬─────────╮
     ___              &kp F1    &kp F2    &kp F3         &kp F4       &kp F5                 &kp F6        &kp F7         &kp F8       &kp F9       &kp F10    ___
// ├────────────────┼─────────┼─────────┼──────────────┼────────────┼─────────────┤        ├─────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┤
     ___              &kp F23   &kp F24     ___         &out OUT_USB &out OUT_BLE           &kp C_MUTE    &kp C_PP       ___          ___          ___       ___
// ├────────────────┼─────────┼─────────┼──────────────┼────────────┼─────────────┤        ├─────────────┼──────────────┼────────────┼────────────┼──────────┼─────────┤
     &bt BT_CLR       ___      ___        &out OUT_TOG   &bt BT_PRV   &bt BT_NXT             &kp C_VOL_DN  &kp C_VOL_UP   &kp C_PREV   &kp C_NEXT   ___        ___
 // ╰───────────────┴─────────┴─────────┼──────────────┼────────────┼─────────────┤        ├─────────────┼──────────────┼────────────┼────────────┴──────────┴──────────╯
                                           ___            ___          ___                    ___           ___
 //                                     ╰──────────────┴────────────┴─────────────╯        ╰─────────────┴──────────────╯
             >;
         };

        AUTO-MOUSE {
            label = "Mouse";
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };

        SCROLL {
            label = "Scroll";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        SNIPE {
            label = "Snipe";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };
    };

};
